# -*- coding: utf-8 -*-
# date: 2021/11/1
# Project: Numpy_Pandas_Notes
# File Name: 3数组的计算.py
# Description: 
# Author: Anefuer_kpl
# Email: 374774222@qq.com

'''
    对于二维数组：
        axis=0 行方向
        axis=1 列方向
    对于三维数组：
        axis=0 块方向
        axis=1 行方向
        axis=2 列方向
'''

import numpy as np

t1 = np.array([0,2,3])
t2 = np.array([3,4,5])

# =====================数组 计算============================
# 当两个数组维度一样时，数组上的每个元素都会在 对应位置 进行计算
print(t1+1)
print(t1+t2)
print(t1*t2)
print(t1/t2)
'''
    numpy中，0/0 = nan。或者读取文件为float类型时，如果有缺失，则会出现nan
       非零数字/0 = inf  表示无穷
'''
print(t1/0)

'''
    广播机制：
        如果两个数组的维度不同，但在某一维度上形状是一样时，就可以进行计算，例如两个数组 a:(3,1)  b:(3,3)
        进行a+b操作，那么 a数组就会 发动广播机制，再复制两列变成形状为 a:[3,3]
        a:[                 a:[
            [1],                [1,1,1],
            [2],    -->         [2,2,2],
            [3]                 [3,3,3]
          ]                   ]
        这样就可在对应元素位置上进行计算了
        
        如果a:(2,3,1)  b:(3,1)  PS: 需要 行 列 的维度一样，否则会报错
        此时b会发动广播机制，复制3块，变成形状 b:(2,3,1), 然后再对应位置元素进行计算
'''

# =====================数组 转置, 行列交换位置============================
t3 = np.array([[1,2,3],[4,5,6]])
# 三种转置的方法
print(t3.T)
print(t3.transpose())
print(t3.swapaxes(1,0))  # 0轴和1轴交换位置，这里含义是把原来的1轴放在0轴位置，把原来的0轴放在1轴位置
